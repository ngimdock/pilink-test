
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Student {
  id String @id @default(uuid())
  email String @unique
  firstname String
  lastname String

  university University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  universityId String

  forums Forum[]
  posts Post[]
  comments Comment[]


  @@index([email, firstname, lastname])
  @@map("students")
}

model University {
  id String @id @default(uuid())
  name String @unique
  phone String @unique
  fax String?

  students Student[]
  forums Forum[]

  @@index([name])
  @@map("universities")
}

model Post {
  id String @id @default(uuid())
  title String
  description String ?

  forum Forum @relation(fields: [forumId], references: [id], onDelete: Cascade)
  forumId String

  owner Student @relation(fields: [ownerId], references: [id], onDelete: SetDefault)
  ownerId String
  
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title])
  @@map("posts")
}

model Comment {
  id String @id @default(uuid())
  message String

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  owner Student @relation(fields: [ownerId], references: [id], onDelete: SetDefault)
  ownerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}

model Forum {
  id String @id @default(uuid())
  name String @unique
  image String @unique
  descrition String ?

  crator Student @relation(fields: [cratorId], references: [id], onDelete: SetDefault)
  cratorId String

  university University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  universityId String

  posts Post[]

  @@index([name])
  @@map("forums")
}
